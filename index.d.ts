// Generated by dts-bundle v0.7.3

declare module 'auto-mapping' {
    export { mapping } from "auto-mapping/decorator";
    export { map } from "auto-mapping/converter";
}

declare module 'auto-mapping/decorator' {
    import { IConverter, IProperty } from "auto-mapping/interface";
    /**
      * The required annotations for object mapping which can only be used on instance properties.
      * @param options mapping options
      */
    export function mapping<T = any>(options?: IProperty<T> | IConverter<T>): (target: any, name: string) => void;
}

declare module 'auto-mapping/converter' {
    import { IConverter, IMappingOptions, PropertyType } from "auto-mapping/interface";
    export function getConverter<T>(type?: PropertyType<T>): IConverter<T>;
    /**
      * Map an object to an instance of the specified type.
      * @param src Data source object.
      * @param constuctor The type of instance, the constructor function of the class.
      * @param options Mapping options.
      */
    export function map<T extends new (...args: any[]) => any>(src: any, constuctor: T, options?: IMappingOptions): InstanceType<T> | null;
}

declare module 'auto-mapping/interface' {
    export type IConverter<T> = (value: any, src: any, dest: T, options?: IMappingOptions) => any;
    export type PropertyType<T> = (new (...args: any[]) => T) | IConverter<T>;
    export interface IProperty<T = any> {
            /**
                * Default value, multiple data sources can specify multiple different default values.
                */
            default?: any;
            /**
                * The parent path of current property, the resulting path is `${domain}${separator}${currentPropertyKey}`
                * The option domain will be ignored when used with path.
                */
            domain?: string;
            /**
                * The order for the property generated, default is 0;
                */
            order?: number;
            /**
                * The property path in the source object, such as 'a.b.c','a.b[0].c', default value is current property name.
                */
            path?: string;
            /**
                * The property path separator, default is '.'.
                */
            separator?: string;
            /**
                * The source object name, default name is 'default',
                * it is required if you want to map data from multiple data sources.
                */
            source?: string;
            /**
                * The property decalre type, it is always necessary if the property type is an array.
                * such as String, [Number]
                */
            type?: PropertyType<T> | [PropertyType<T>];
    }
    export interface IMappingOptions {
            /**
                * The source object name, default is 'default', it is required if you want to map data from multiple data sources.
                */
            source?: string;
            /**
                * Use the default mapping configuration when the current source configuration is missing.
                * default is true.
                */
            useDefaultSource?: boolean;
    }
}

