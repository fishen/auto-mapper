{"version":3,"sources":["index.js"],"names":["i","c","Error","code","a","exports"],"mappings":"CAAwEA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,SAAAC,EAAAD,EAAAA,GAAA,IAAAC,EAAAD,GAAA,CAAA,IAAAC,EAAAD,GAAA,CAAA,IAAAC,EAAA,mBAAgGC,SAAAA,QAAAA,IAAAA,GAAAA,EAAAA,OAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,OAAAA,EAAAA,GAAA,GAAAA,IAAAA,EAAA,IAAAA,MAAA,uBAA2CC,EAAAC,KAAAD,MAAAC,EAAAD,KAAA,mBAEpLE,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CAAAA,QAAAA,IAAAA,EAAAA,GAAAA,GAAAA,KAAAA,EAAAA,QAAAA,SAAAA,GAAAA,OAAAA,EAAAA,EAAAA,GAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,QAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,GAAAA,QAAAA,IAAAA,IAAAA,EAAAA,mBAAAA,SAAAA,QAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,EAAAA,EAAAA,IAAAA,OAAAA,GAAAA,CAAAA,EAAAA,CAAAA,SAAAA,EAAAA,EAAAA","file":"index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar property_1 = require(\"./property\");\r\nvar constants_1 = require(\"./constants\");\r\nfunction mapping(options) {\r\n    return function (target, name) {\r\n        var _a;\r\n        if (typeof target === 'function') {\r\n            console.warn('Mapping static members is not allowed, it is a dangerous operation.');\r\n            return;\r\n        }\r\n        console.log(name);\r\n        var opts = options || {};\r\n        var property = property_1.Property.from(opts, target, name);\r\n        target[constants_1.PROPERTIES_KEY] = target[constants_1.PROPERTIES_KEY] || (_a = {}, _a[property.source] = {}, _a);\r\n        target[constants_1.PROPERTIES_KEY][property.source][name] = property;\r\n    };\r\n}\r\nexports.mapping = mapping;\r\n\n},{\"./constants\":2,\"./property\":5}],2:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DEFAULT_PROPERTY_SOURCE = 'default';\r\nexports.DEFAULT_PROPERTY_SEP = '.';\r\nexports.PROPERTIES_KEY = Symbol('PROPERTIES_KEY');\r\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar constants_1 = require(\"./constants\");\r\nvar INSTANCE_TYPES = [Date];\r\nfunction convert(value, type) {\r\n    if (typeof type === 'function') {\r\n        if (constants_1.PROPERTIES_KEY in type.prototype) {\r\n            return map(value, type);\r\n        }\r\n        else {\r\n            if (~INSTANCE_TYPES.indexOf(type)) {\r\n                return new type(value);\r\n            }\r\n            else {\r\n                return type(value);\r\n            }\r\n            ;\r\n        }\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nexports.convert = convert;\r\nfunction map(src, constuctor, source) {\r\n    if (src === undefined || src === null || typeof src !== 'object') {\r\n        return null;\r\n    }\r\n    source = source || constants_1.DEFAULT_PROPERTY_SOURCE;\r\n    var instance = new constuctor();\r\n    var properties = constuctor.prototype[constants_1.PROPERTIES_KEY];\r\n    if (!properties || !(source in properties)) {\r\n        console.warn(\"The type \" + constuctor.name + \" has no mapping annotation declared.\");\r\n        return instance;\r\n    }\r\n    var currentProperties = properties[source];\r\n    Object.keys(currentProperties).forEach(function (name) {\r\n        var _a, _b;\r\n        var property = currentProperties[name];\r\n        var result = property.convert(src, instance);\r\n        if (result !== undefined) {\r\n            Object.assign(instance, (_a = {}, _a[name] = result, _a));\r\n        }\r\n        else if (property.default) {\r\n            Object.assign(instance, (_b = {}, _b[name] = property.default, _b));\r\n        }\r\n    });\r\n    return instance;\r\n}\r\nexports.map = map;\r\n\n},{\"./constants\":2}],4:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar annotation_1 = require(\"./annotation\");\r\nexports.mapping = annotation_1.mapping;\r\nvar converter_1 = require(\"./converter\");\r\nexports.map = converter_1.map;\r\n\n},{\"./annotation\":1,\"./converter\":3}],5:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar converter_1 = require(\"./converter\");\r\nvar constants_1 = require(\"./constants\");\r\nvar Property = (function () {\r\n    function Property() {\r\n        this.separator = constants_1.DEFAULT_PROPERTY_SEP;\r\n        this.source = constants_1.DEFAULT_PROPERTY_SOURCE;\r\n        this.isArray = false;\r\n    }\r\n    Property.from = function (options, target, name) {\r\n        options = typeof options === 'function' ? { convert: options } : options;\r\n        var property = new Property();\r\n        if (typeof options.convert === 'function') {\r\n            property.convert = options.convert;\r\n        }\r\n        else {\r\n            Object.assign(property, {\r\n                path: options.path,\r\n                type: options.type,\r\n                default: options.default,\r\n                isArray: options.isArray\r\n            });\r\n            property.path = options.path || name;\r\n            property.source = options.source || property.source;\r\n            property.separator = options.separator || property.separator;\r\n            if (Reflect && 'getMetadata' in Reflect) {\r\n                var designType = Reflect.getMetadata(\"design:type\", target, name);\r\n                property.isArray = property.isArray || designType === Array;\r\n                if (!property.isArray) {\r\n                    property.type = property.type || designType;\r\n                }\r\n            }\r\n            if (!property.type) {\r\n                if (property.isArray) {\r\n                    console.warn(\"The propery \" + name + \" missing 'type' option which is required for array type\");\r\n                }\r\n                else {\r\n                    console.warn(\"The propery \" + name + \" missing 'type' option and it will be treated as any type by default, you can import module 'reflect-metadata' to get types automatically\");\r\n                }\r\n            }\r\n        }\r\n        return property;\r\n    };\r\n    Property.prototype.convert = function (src, _dest) {\r\n        var _this = this;\r\n        if (!src)\r\n            return undefined;\r\n        var pathes = this.path.split(this.separator);\r\n        for (var index = 0, length = pathes.length; index < length; index++) {\r\n            var path = pathes[index];\r\n            var matches = path.match(/^(.+)\\[(\\d)\\]$/);\r\n            if (matches) {\r\n                var name_1 = matches[1], index_1 = matches[2];\r\n                if (Array.isArray(src[name_1]) && src[name_1].length > index_1) {\r\n                    src = src[name_1][index_1];\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                if (path in src) {\r\n                    src = src[path];\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (index === length) {\r\n            if (this.isArray) {\r\n                src = Array.isArray(src) ? src : [src];\r\n                src = src.map(function (item) { return converter_1.convert(item, _this.type); });\r\n            }\r\n            else {\r\n                src = converter_1.convert(src, this.type);\r\n            }\r\n            return src;\r\n        }\r\n        return undefined;\r\n    };\r\n    return Property;\r\n}());\r\nexports.Property = Property;\r\n\n},{\"./constants\":2,\"./converter\":3}]},{},[4]);\n"]}